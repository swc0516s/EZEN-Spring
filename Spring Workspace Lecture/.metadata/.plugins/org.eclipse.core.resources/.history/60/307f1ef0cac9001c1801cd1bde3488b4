<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean id="xml1" class="kr.co.ezenac.beans.TestBean1"></bean>
	<bean id="xml2" class="kr.co.ezenac.beans.TestBean2"></bean>
	<bean id="xml3" class="kr.co.ezenac.beans2.TestBean1"></bean>
	<bean id="advisor1" class="kr.co.ezenac.advisor.AdvisorClass"></bean>


	<aop:config>
		<aop:aspect ref="advisor1">
			<!-- 반환 타입이 void, kr.co.ezenac.beans.TestBean1클래스, method1메서드, 매개 변수 없음 -->
			<!-- <aop:pointcut expression="execution(void kr.co.ezenac.beans.TestBean1.method1())" id="point1"/> -->
			
			<!-- 반환 타입이 void, kr.co.ezenac.beans.TestBean1클래스, method1메서드, 정수형 매개 변수 1개 -->
			<!-- <aop:pointcut expression="execution(void kr.co.ezenac.beans.TestBean1.method1(int))" id="point1"/> -->
			
			<!-- 반환 타입이 void, kr.co.ezenac.beans.TestBean1클래스, method1메서드, String 매개 변수 1개 -->
			<!-- <aop:pointcut expression="execution(void kr.co.ezenac.beans.TestBean1.method1(java.lang.String))" id="point1"/> -->
			
			<!-- 반환 타입이 void, kr.co.ezenac.beans.TestBean1클래스, method1메서드, 정수형 매개 변수 2개 -->
			<!-- <aop:pointcut expression="execution(void kr.co.ezenac.beans.TestBean1.method1(int, int))" id="point1"/> -->
			
			<!-- 반환 타입이 void, kr.co.ezenac.beans.TestBean1클래스, method1메서드, 정수형 매개 변수1개, String타입 매개 변수 1개 -->
            <!-- <aop:pointcut expression="execution(void kr.co.ezenac.beans.TestBean1.method1(int, int))" id="point1"/> -->
            
			<!-- 반환 타입이 void, kr.co.ezenac.beans.TestBean1클래스, method1메서드, 모든 타입의 매개 변수 1개 -->
			<!-- <aop:pointcut expression="execution(void kr.co.ezenac.beans.TestBean1.method1(*))" id="point1"/> -->
			
			<!-- 반환 타입이 void, kr.co.ezenac.beans.TestBean1클래스, method1메서드, 모든 타입의 매개 변수 2개 -->
			<!-- <aop:pointcut expression="execution(void kr.co.ezenac.beans.TestBean1.method1(*,*))" id="point1"/> -->
			
			<!-- 반환 타입이 void, kr.co.ezenac.beans.TestBean1클래스, method1메서드, 모든 타입의 매개 변수 0개 이상 -->
			<!-- <aop:pointcut expression="execution(void kr.co.ezenac.beans.TestBean1.method1(..))" id="point1"/> -->
			
			<!-- 반환 타입이 void, kr.co.ezenac.beans.TestBean1클래스, 모든 메서드-->
			<!-- <aop:pointcut expression="execution(void kr.co.ezenac.beans.TestBean1.*(..))" id="point1"/> -->
			
			
			
			
			
			
			<!-- 반환 타입이 void, kr.co.ezenac.bean 패키지의 모든 클래스, method1 메서드-->
			<!-- <aop:pointcut expression="execution(void kr.co.ezenac.beans.*.method1(..))" id="point1"/> -->
			
			<!-- 반환 타입이 void, kr.co.ezenac.bean 패키지의 모든 클래스, 모든 메서드-->
			<!-- <aop:pointcut expression="execution(void kr.co.ezenac.beans.*.*(..))" id="point1"/> -->
			
			<!-- 반환 타입이 void, kr.co.ezenac.의 모든 패키지의 모든 클래스, 모든 메서드-->
			<!-- <aop:pointcut expression="execution(void kr.co.ezenac.*.*.*(..))" id="point1"/> -->
			
			<!-- 반환 타입이 void, 모든 패키지, 모든 클래스, 모든 메서드-->
			<aop:pointcut expression="execution(void kr.co.ezenac.*.*.*(..))" id="point1"/>
			
			
			
		<aop:before method="beforeMethod" pointcut-ref="point1"/>
		</aop:aspect>
	</aop:config>	
</beans>